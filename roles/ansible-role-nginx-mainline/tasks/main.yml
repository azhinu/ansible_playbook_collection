---
- name: Debian based block
  block:
    - name: Install prerequisites
      package:
        name:
          - curl
          - gnupg2
          - ca-certificates
        state: present
    - name: "ADD REPO: Add repo key"
      apt_key:
        url: https://nginx.org/keys/nginx_signing.key
        state: present
    - name: "Add NGiNX"
      apt_repository:
        repo: "deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }} {{ ansible_distribution_release|lower }} nginx"
        state: present
        filename: nginx
        update_cache: true
  when: ansible_os_family == 'Debian'


- name: Add NGiNX Mainline repo
  yum_repository:
    name: nginx
    description: NGiNX Mainline repo
    file: nginx
    baseurl: http://nginx.org/packages/mainline/centos/$releasever/$basearch/
    gpgcheck: True
    gpgkey: https://nginx.org/keys/nginx_signing.key
  when: ansible_os_family == 'RedHat'

- name: Install NGiNX
  package:
    name: nginx
    state: latest

- name: Copy default NGiNX config
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
  loop:
    - { src: nginx.conf, dest: /etc/nginx/nginx.conf }
    - { src: tweaks.conf, dest: /etc/nginx/conf.d/tweaks.conf }
    - { src: default.conf, dest: /etc/nginx/conf.d/default.conf }

- name: Generate dummy certificate
  shell: |
    umask 077

    answers() {
      echo --
      echo SomeState
      echo SomeCity
      echo SomeOrganization
      echo SomeOrganizationalUnit
      echo localhost.localdomain
      echo root@localhost.localdomain
    }

    for target in /etc/ssl/dummy-cert.pem ; do
      PEM1=`/bin/mktemp /tmp/openssl.XXXXXX`
      PEM2=`/bin/mktemp /tmp/openssl.XXXXXX`
      answers | /usr/bin/openssl req -newkey rsa:2048 -keyout $PEM1 -nodes -x509 -days 365 -out $PEM2 2> /dev/null
      cat $PEM1 >  ${target}
      echo ""   >> ${target}
      cat $PEM2 >> ${target}
      rm -f $PEM1 $PEM2
    done
