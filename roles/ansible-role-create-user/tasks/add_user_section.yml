#syntax=source.ansible
---
- name: Add users
  user:
    name: "{{ item.username }}"
    uid: "{{ item.uid|default(omit) }}"
    password: "{{ item.password|default(omit) }}"
    update_password: "{{ item.update_password|default('on_create') }}"
    groups: "{{ item.groups|default(omit) }}"
    comment: "{{ item.comment|default(omit) }}"
    shell: "{{ item.shell|default('/bin/bash') }}"
    expires: -1
    append: true
    state: present
  register: add_user

- name: Disable user password
  command: "passwd -d {{ item.username }}"
  when: (item.password is not defined and (add_user.changed or item.update_password|default('on_create') == 'always' )) or reset_all_passwords|default(False)|bool

- name: Expire user password
  command: "passwd -e {{ item.username }}"
  when: (item.password is not defined and (add_user.changed or item.update_password|default('on_create') == 'always' )) or reset_all_passwords|default(False)|bool

- name: Ensure sudo group exists
  group:
    name: "{{ 'wheel' if (ansible_os_family == 'RedHat' or ansible_os_family == 'Sangoma') else 'sudo'}}"
    state: present
  when: item.use_sudo|default(False)

- name: Add User to sudoers
  user:
    name: "{{ item.username}}"
    groups: "{{ 'wheel' if (ansible_os_family == 'RedHat' or ansible_os_family == 'Sangoma') else 'sudo'}}"
    append: true
  when: item.use_sudo|default(False)

- name: Add authorized keys
  authorized_key:
    user: "{{ item.username }}"
    key: "{{ item.ssh_key }}"
    exclusive: "{{ item.exclusive_ssh_key|default(omit) }}"
    state: present
  when: item.ssh_key is defined
